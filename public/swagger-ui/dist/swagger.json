{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "Databases API",
      "description": "An API for using CRUD operations with the Databases database",
      "contact": {
        "name": "Randall ITS at UNCW"
      },
      "license": {
        "name": "UNCW"
      }
    },
    "host": "localhost:3000",
    "basePath": "/",
    "schemes": [
      "http"
    ],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "paths": {
      "/authenticate": {
        "post": {
          "description": "Generates a token based on LDAP credentials",
          "consumes": [
              "application/x-www-form-urlencoded"
          ],
          "produces": [
              "application/json"
            ],
          "parameters": [
            {
              "name": "username",
              "in": "formData",
              "description": "LDAP Username",
              "required": true,
              "type": "string"
            },
            {
              "name": "password",
              "in": "formData",
              "description": "LDAP Password",
              "required": true,
              "type": "string",
              "format": "password"
            }
          ],
          "responses": {
            "200": {
              "description": "Token Object"
            }
          }
        }
      },
      "/databases": {
        "get": {
          "description": "Returns all databases",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
            "name": "token",
            "in": "query",
            "description": "Token for authentication",
            "required": true,
            "type": "string"            
          }],
          "responses": {
            "200": {
              "description": "A list of databases.",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Database"
                }
              }
            }
          }
        },
        "post": {
            "description": "Creates a new database item",
            "consumes": [
                "application/x-www-form-urlencoded"
            ],
            "produces": [
                "application/json"
              ],
            "parameters": [
              {
                "name": "token",
                "in": "formData",
                "description": "Token for authentication",
                "required": true,
                "type": "string"            
              },
              {
                "name": "title",
                "in": "formData",
                "description": "Title of the database",
                "required": true,
                "type": "string"
              },
              {
                "name": "body",
                "in": "formData",
                "description": "Description of the database",
                "required": false,
                "type": "string"
              },
              {
                "name": "link",
                "in": "formData",
                "description": "Link to the database",
                "required": false,
                "type": "string"
              },
              {
                "name": "advisory",
                "in": "formData",
                "description": "",
                "required": false,
                "type": "string"
              }
            ],
            "responses": {
              "200": {
                "description": "Database response",
                "schema": {
                  "$ref": "#/definitions/Database"
                }
              }
            }
          }
      },
      "/databases/{id}": {
        "get": {
            "description": "Returns a database based on a single ID",
            "parameters": [
              {
                "name": "token",
                "in": "query",
                "description": "Token for authentication",
                "required": true,
                "type": "string"            
              },
              {
                "name": "id",
                "in": "path",
                "description": "ID database to fetch",
                "required": true,
                "type": "integer",
                "format": "int64"
              }
            ],
            "responses": {
              "200": {
                "description": "Database response",
                "schema": {
                  "$ref": "#/definitions/Database"
                }
              }
            }
          },
        "put": {
            "description": "Update an existing database record",
            "consumes": [
                "application/x-www-form-urlencoded"
            ],
            "produces": [
                "application/json"
                ],
            "parameters": [
                {
                  "name": "token",
                  "in": "formData",
                  "description": "Token for authentication",
                  "required": true,
                  "type": "string"            
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "ID database to fetch",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                },
                {
                "name": "title",
                "in": "formData",
                "description": "Title of the database",
                "required": false,
                "allowEmptyValue" : false,
                "type": "string"
                },
                {
                "name": "body",
                "in": "formData",
                "description": "Description of the database",
                "required": false,
                "allowEmptyValue" : true,
                "type": "string"
                },
                {
                "name": "link",
                "in": "formData",
                "description": "Link to the database",
                "required": false,
                "allowEmptyValue" : true,
                "type": "string"
                },
                {
                "name": "advisory",
                "in": "formData",
                "description": "",
                "required": false,
                "allowEmptyValue" : true,
                "type": "string"
                }
            ],
            "responses": {
                "200": {
                "description": "Database response",
                "schema": {
                    "$ref": "#/definitions/Database"
                }
                }
            }
        },
        "patch": {
            "description": "Patch an existing database record",
            "consumes": [
                "application/x-www-form-urlencoded"
            ],
            "produces": [
                "application/json"
                ],
            "parameters": [
                {
                  "name": "token",
                  "in": "formData",
                  "description": "Token for authentication",
                  "required": true,
                  "type": "string"            
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "ID database to fetch",
                    "required": true,
                    "type": "integer",
                    "format": "int64"
                },
                {
                "name": "title",
                "in": "formData",
                "description": "Title of the database",
                "required": false,
                "type": "string"
                },
                {
                "name": "body",
                "in": "formData",
                "description": "Description of the database",
                "required": false,
                "allowEmptyValue" : false,
                "type": "string"
                },
                {
                "name": "link",
                "in": "formData",
                "description": "Link to the database",
                "required": false,
                "allowEmptyValue" : false,
                "type": "string"
                },
                {
                "name": "advisory",
                "in": "formData",
                "description": "",
                "required": false,
                "allowEmptyValue" : false,
                "type": "string"
                }
            ],
            "responses": {
                "200": {
                "description": "Database response",
                "schema": {
                    "$ref": "#/definitions/Database"
                }
                }
            }
        },
        "delete": {
            "description": "Deletes a database record based on a single ID",
            "parameters": [
              {
                "name": "token",
                "in": "formData",
                "description": "Token for authentication",
                "required": true,
                "type": "string"            
              },
              {
                "name": "id",
                "in": "path",
                "description": "ID database to fetch",
                "required": true,
                "type": "integer",
                "format": "int64"
              }
            ],
            "responses": {
              "200": {
                "description": "Delete database response"
              }
            }                  
        }
      }
    },
    "definitions": {
      "Database": {
        "type": "object",
        "required": [
          "id",
          "title",
          "body",
          "link",
          "advisory"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "advisory": {
            "type": "string"
          }          
        }
      }

    }
  }